name: Index Weaviate
description: |
  Component that takes text or embeddings of text snippets and indexes them into a Weaviate vector database.

  To run the component with text snippets as input, the component needs to be connected to a previous component that outputs text snippets.

  ### Running with text as input

  ```python
  import pyarrow as pa
  from fondant.pipeline import Pipeline

  pipeline = Pipeline(name="my_pipeline", base_path="path/to/pipeline")

  dataset = pipeline.read(
      "load_from_csv",
      arguments={
          "dataset_uri": "path/to/dataset.csv",
      },
      produces={
          "text": pa.string(),
      }
  )

  dataset.write(
      "index_weaviate",
      arguments={
          "weaviate_url": "http://localhost:8080",
          "class_name": "my_class",
          "vectorizer": "text2vec-openai",
          "additional_headers" : {
              "X-OpenAI-Api-Key": "YOUR-OPENAI-API-KEY"
          }
      },
      consumes={
          "text": pa.string()
      }
  )
  ```
  
  ### Running with embedding as input
  
  ```python
  import pyarrow as pa
  from fondant.pipeline import Pipeline
  
  pipeline = Pipeline(name="my_pipeline",base_path="path/to/pipeline")
  
  dataset = pipeline.read(
      "load_from_csv",
      arguments={
          "dataset_uri": "path/to/dataset.csv",
      },
      produces={
          "text": pa.string(),
      }
  )
  
  dataset = dataset.apply(
      "embed_text",
      arguments={...},
      consumes={
          "text": "text",
      },
  )
  
  dataset.write(
      "index_weaviate",
      arguments={
          "weaviate_url": "http://localhost:8080",
          "class_name": "my_class",
      },
      consumes={
          "embedding": pa.list_(pa.float32())
      }
  )
  ```

image: fndnt/index_weaviate:dev
tags:
  - Data writing

consumes:
  additionalProperties: true


args:
  weaviate_url:
    description: The URL of the weaviate instance.
    type: str
    default: http://localhost:8080
  batch_size:
    description: |
      The batch size to be used.
      Parameter of weaviate.batch.Batch().configure().
    type: int
    default: 100
  dynamic:
    description: |
      Whether to use dynamic batching or not.
      Parameter of weaviate.batch.Batch().configure().
    type: bool
    default: True
  num_workers:
    description: |
      The maximal number of concurrent threads to run batch import.
      Parameter of weaviate.batch.Batch().configure().
    type: int
    default: 2
  overwrite:
    description: Whether to overwrite/ re-create the existing weaviate class and its embeddings.
    type: bool
    default: False
  class_name:
    description: |
      The name of the weaviate class that will be created and used to store the embeddings.
      Should follow the weaviate naming conventions.
    type: str
  additional_config:
    description: |
      Additional configuration to pass to the weaviate client.
    type: dict
    default: {}
  additional_headers:
    description: |
      Additional headers to pass to the weaviate client.
    type: dict
    default: {}
  vectorizer:
    description: |
      Which vectorizer to use. 
      You can find the available vectorizers in the weaviate documentation: https://weaviate
      .io/developers/weaviate/modules/retriever-vectorizer-modules
      Set this to None if you want to insert your own embeddings.
    type: str
    default: None
  module_config:
    description: |
        The configuration of the vectorizer module.
        You can find the available configuration options in the weaviate documentation: https://weaviate
        .io/developers/weaviate/modules/retriever-vectorizer-modules
        Set this to None if you want to insert your own embeddings.
    type: dict
    default: {}