name: sd_finetuning_component
description: A component that takes a data manifest as input and downloads the appropriate dataset for finetuning
inputs:
  - name: run_id
    description: The run id of the pipeline
    type: String
  - name: artifact_bucket
    description: The GCS bucket used to store the artifact
    type: String
  - name: component_name
    description: the name of the component (used to create gcs artefact path)
    type: String
  - name: project_id
    description: The id of the gcp-project
    type: String
  - name: data_manifest_gcs_path
    description: the path to the data manifest that contains information on the training set
    type: String
  - name: pretrained_model_gcs_path
    description: The gcs path where the base model to finetune is located
    type: String
  - name: resume_from_checkpoint
    description: Whether training should be resumed from a previous checkpoint.
      Use a path saved in `pretrained_model_gcs_path` by `--checkpointing_steps`,
      or `"latest"` to automatically select the last available checkpoint.
    type: String
    optional: True
  - name: seed
    description: the name of the component (used to create gcs artefact path)
    type: Integer
  - name: resolution
    description: The resolution for input images, all the images in the train/validation 
      will be resized to this resolution
    type: Integer
  - name: train_batch_size
    description: Batch size (per device) for the training dataloader
    type: Integer
  - name: num_train_epochs
    description: Total number of epochs to perform
    type: Integer
  - name: max_train_steps
    description: Total number of training steps to perform. If provided overrides `num_train_epochs`
    type: Integer
    optional: True
  - name: checkpointing_steps
    description: Save a checkpoint of the training state every X updates. These
      checkpoints are only suitable for resuming training using
      `--resume_from_checkpoint`.
    type: Integer
    optional: True
  - name: gradient_accumulation_steps
    description: The number of updates steps to accumulate before performing a backward/update pass
    type: Integer
  - name: gradient_checkpointing
    description: Whether or not to use gradient checkpointing to save memory at the expense of slower backward pass
    type: String
  - name: learning_rate
    description: Initial learning rate (after the potential warmup period) to use.
    type: Float
  - name: scale_lr
    description: Scale the learning rate by the number of GPUs, gradient accumulation steps, and batch size
    type: String
  - name: lr_scheduler
    description: The scheduler type to use. Choose between ["linear", "cosine",
      cosine_with_restarts", "polynomial", "constant","constant_with_warmup"]
    type: String
  - name: lr_warmup_steps
    description: Scale the learning rate by the number of GPUs, gradient accumulation
      steps, and batch size
    type: Integer
  - name: use_ema
    description: Whether to use EMA model
    type: String
  - name: mixed_precision
    description: Whether to use mixed precision. Choose between fp16 and bf16 (bfloat16).
      Bf16 requires PyTorch >=1.10.and an Nvidia Ampere GPU. Default to the value of accelerate
      config of the current system or the flag passed with the accelerate.launch` command.
      Use this argument to override the accelerate config
    type: String
  - name: center_crop
    description: whether to center crop images before resizing to resolution (if not set, random
      crop will be used)
    type: String
  - name: random_flip
    description: whether to randomly flip images horizontally
    type: String


outputs:
  - name: model_gcs_path_finetuning_component
    description: The path where the model output and checkpoints are saved

implementation:
  container:
    image: europe-west1-docker.pkg.dev/storied-landing-366912/storied-landing-366912-default-repository/mlpipelines/kubeflow/components/sd_finetuning_component:latest
    command: [
      python3, main.py,
      --run-id,                                  { inputValue: run_id },
      --artifact-bucket,                         { inputValue: artifact_bucket },
      --component-name,                          { inputValue: component_name },
      --project-id,                              { inputValue: project_id },
      --data-manifest-gcs-path,                  { inputValue: data_manifest_gcs_path },
      --pretrained-model-gcs-path,               { inputValue: pretrained_model_gcs_path },
      --resume-from-checkpoint,                  { inputValue: resume_from_checkpoint },
      --seed,                                    { inputValue: seed },
      --resolution,                              { inputValue: resolution },
      --train-batch-size,                        { inputValue: train_batch_size },
      --num-train-epochs,                        { inputValue: num_train_epochs },
      --max-train-steps,                         { inputValue: max_train_steps },
      --checkpointing-steps,                     { inputValue: checkpointing_steps },
      --gradient-accumulation-steps,             { inputValue: gradient_accumulation_steps },
      --gradient-checkpointing,                  { inputValue: gradient_checkpointing },
      --learning-rate,                           { inputValue: learning_rate },
      --scale-lr,                                { inputValue: scale_lr },
      --lr-scheduler,                            { inputValue: lr_scheduler },
      --lr-warmup-steps,                         { inputValue: lr_warmup_steps },
      --use-ema,                                 { inputValue: use_ema },
      --mixed-precision,                         { inputValue: mixed_precision },
      --center-crop,                             { inputValue: center_crop },
      --random-flip,                             { inputValue: random_flip },
      --model-gcs-path-finetuning-component,     { outputPath: model_gcs_path_finetuning_component },
    ]
