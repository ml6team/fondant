[tool.poetry]
name = "fondant"
version = "0.1.dev0"
description = "Fondant - Sweet data-centric foundation model fine-tuning"
readme = "README.md"
keywords = ["data", "machine learning", "fine-tuning", "foundation models"]
license = "Apache-2.0"
authors = [
    "ML6 <fondant@ml6.eu>",
    "Simon Slangen <simon.slangen@ml6.eu>",
    "Philippe Moussalli <philippe.moussalli@ml6.eu>",
    "Robbe Sneyders <robbe.sneyders@ml6.eu>",
    "Georges Lorré <georges.lorré@ml6.eu>",
    "Niels Rogge <niels.rogge@ml6.eu>",
]
maintainers = [
    "ML6 <fondant@ml6.eu>",
    "Philippe Moussalli <philippe.moussalli@ml6.eu>",
    "Robbe Sneyders <robbe.sneyders@ml6.eu>",
    "Georges Lorré <georges.lorré@ml6.eu>",
    "Niels Rogge <niels.rogge@ml6.eu>",
]
repository = "https://github.com/ml6team/fondant"
include = ["*.txt", "*.rst", "*.md"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = ">= 3.8"
dask = {extras = ["dataframe"], version = ">= 2023.4.1"}
importlib-resources = { version = ">= 1.3", python = "<3.9" }
jsonschema = ">= 4.17.3"
pyarrow = ">= 11.0.0"

kfp = { version = ">= 1.8.19", optional = true }
kubernetes = { version = ">= 18.20.0", optional = true }
pandas = { version = ">= 1.3.5", optional = true }

[tool.poetry.extras]
pipelines = ["kfp", "kubernetes"]

[tool.poetry.scripts]
data_explorer = 'fondant.cli:run_data_explorer'


[tool.poetry.group.test.dependencies]
liccheck = "^0.7.3"
pre-commit = "^3.1.1"
pytest = "^7.2.2"
pytest-cov = "~2.12.1"

[tool.poetry.group.docs.dependencies]
mkdocs-material = "^9.1.8"

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = ["D", "E", "F", "I", "PL", "RUF"]
ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in __init__
    "D205",  # 1 blank line required between summary line and description (autofix not working)
    "D212",  # Multi-line docstring summary should start at first line (we choose 2nd)
]
line-length = 100  # Only for comments, as code is handled by black at length 88

[tool.ruff.pydocstyle]
convention = "google"
