name: Test pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install poetry==1.4.0
          poetry install --extras pipelines
      - name: Test with pre-commit
        run: poetry run pre-commit run --all-files --show-diff-on-failure
      - name: Check licenses
        run: |
          poetry export -f requirements.txt --output /tmp/requirements.txt
          poetry run liccheck -s license_strategy.ini -r /tmp/requirements.txt -l PARANOID
      - name: Shadow-run pylint
        # Check if pylint catches errors not caught by our pre-commit checks to validate switch
        # to ruff
        run: |
          pip install pylint==2.16.4
          pylint fondant --exit-zero
      - name: Test with pytest
        run: |
          poetry run pytest tests --cov fondant --cov-report term-missing
      - name: Coveralls
        run: |
          pip install "coveralls<4"
          coveralls --service github
        env:
          COVERALLS_PARALLEL: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: test-${{ matrix.python-version }}

  finish-coveralls:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Install "coveralls<4"
        run: pip install coveralls
      - name: Coveralls Finished
        run: coveralls --service github --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}