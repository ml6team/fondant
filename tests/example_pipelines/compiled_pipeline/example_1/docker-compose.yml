services:
  first_component:
    build: ./tests/example_pipelines/valid_pipeline/example_1
    command:
    - --metadata
    - '{"run_id": "test_pipeline", "base_path": "/foo/bar"}'
    - --output_manifest_path
    - /foo/bar/manifest.json
    - --component_spec
    - '{"name": "First component", "description": "This is an example component",
      "image": "example_component:latest", "produces": {"images": {"fields": {"data":
      {"type": "binary"}}}, "captions": {"fields": {"data": {"type": "string"}}}},
      "args": {"storage_args": {"description": "Storage arguments", "type": "str"}}}'
    - --storage_args
    - a dummy string arg
    depends_on: {}
    volumes: []
  second_component:
    build: ./tests/example_pipelines/valid_pipeline/example_1
    command:
    - --metadata
    - '{"run_id": "test_pipeline", "base_path": "/foo/bar"}'
    - --output_manifest_path
    - /foo/bar/manifest.json
    - --component_spec
    - '{"name": "Second component", "description": "This is an example component",
      "image": "example_component:latest", "consumes": {"images": {"fields": {"data":
      {"type": "binary"}}}}, "produces": {"embeddings": {"fields": {"data": {"type":
      "array", "items": {"type": "float32"}}}}}, "args": {"storage_args": {"description":
      "Storage arguments", "type": "str"}}}'
    - --storage_args
    - a dummy string arg
    - --input_manifest_path
    - /foo/bar/manifest.json
    depends_on:
      first_component:
        condition: service_completed_successfully
    volumes: []
  third_component:
    build: ./tests/example_pipelines/valid_pipeline/example_1
    command:
    - --metadata
    - '{"run_id": "test_pipeline", "base_path": "/foo/bar"}'
    - --output_manifest_path
    - /foo/bar/manifest.json
    - --component_spec
    - '{"name": "Third component", "description": "This is an example component",
      "image": "example_component:latest", "consumes": {"images": {"fields": {"data":
      {"type": "binary"}}}, "captions": {"fields": {"data": {"type": "string"}}},
      "embeddings": {"fields": {"data": {"type": "array", "items": {"type": "float32"}}}}},
      "produces": {"images": {"fields": {"data": {"type": "binary"}}}, "additionalSubsets":
      false}, "args": {"storage_args": {"description": "Storage arguments", "type":
      "str"}}}'
    - --storage_args
    - a dummy string arg
    - --input_manifest_path
    - /foo/bar/manifest.json
    depends_on:
      second_component:
        condition: service_completed_successfully
    volumes: []
version: '3.8'
