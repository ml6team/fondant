apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: test-pipeline-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.22, pipelines.kubeflow.org/pipeline_compilation_time: '2023-01-01T00:00:00',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "description of the test
      pipeline", "name": "test_pipeline"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.22}
spec:
  entrypoint: test-pipeline
  templates:
  - name: first-component
    container:
      args: []
      command: [python3, main.py, --input_manifest_path, /tmp/inputs/input_manifest_path/data,
        --metadata, '{"base_path": "/foo/bar", "run_id": "{{workflow.name}}"}', --component_spec,
        '{"args": {"storage_args": {"description": "Storage arguments", "type": "str"}},
          "description": "This is an example component", "image": "example_component:latest",
          "name": "First component", "produces": {"captions": {"fields": {"data":
          {"type": "string"}}}, "images": {"fields": {"data": {"type": "binary"}}}}}',
        --input_partition_rows, None, --storage_args, a dummy string arg, --output_manifest_path,
        /tmp/outputs/output_manifest_path/data]
      image: example_component:latest
      resources:
        limits: {nvidia.com/gpu: 1}
    inputs:
      artifacts:
      - name: input_manifest_path
        path: /tmp/inputs/input_manifest_path/data
        raw: {data: ''}
    outputs:
      artifacts:
      - {name: first-component-output_manifest_path, path: /tmp/outputs/output_manifest_path/data}
    nodeSelector: {node_pool: a_node_pool}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"description": "This
          is an example component", "implementation": {"container": {"command": ["python3",
          "main.py", "--input_manifest_path", {"inputPath": "input_manifest_path"},
          "--metadata", {"inputValue": "metadata"}, "--component_spec", {"inputValue":
          "component_spec"}, "--input_partition_rows", {"inputValue": "input_partition_rows"},
          "--storage_args", {"inputValue": "storage_args"}, "--output_manifest_path",
          {"outputPath": "output_manifest_path"}], "image": "example_component:latest"}},
          "inputs": [{"description": "Path to the input manifest", "name": "input_manifest_path",
          "type": "String"}, {"description": "Metadata arguments containing the run
          id and base path", "name": "metadata", "type": "String"}, {"default": "None",
          "description": "The component specification as a dictionary", "name": "component_spec",
          "type": "JsonObject"}, {"default": "None", "description": "The number of
          rows to load per partition. Set to override the automatic partitioning",
          "name": "input_partition_rows", "type": "String"}, {"description": "Storage
          arguments", "name": "storage_args", "type": "String"}], "name": "First component",
          "outputs": [{"description": "Path to the output manifest", "name": "output_manifest_path",
          "type": "String"}]}', pipelines.kubeflow.org/component_ref: '{"digest":
          "2a304ce49a15404ba50dfd8b56ec43fa8ac8c29f80579d1c8fb974d3f1a5c87f"}', pipelines.kubeflow.org/arguments.parameters: '{"component_spec":
          "{\"args\": {\"storage_args\": {\"description\": \"Storage arguments\",
          \"type\": \"str\"}}, \"description\": \"This is an example component\",
          \"image\": \"example_component:latest\", \"name\": \"First component\",
          \"produces\": {\"captions\": {\"fields\": {\"data\": {\"type\": \"string\"}}},
          \"images\": {\"fields\": {\"data\": {\"type\": \"binary\"}}}}}", "input_partition_rows":
          "None", "metadata": "{\"base_path\": \"/foo/bar\", \"run_id\": \"{{workflow.name}}\"}",
          "storage_args": "a dummy string arg"}'}
  - name: test-pipeline
    dag:
      tasks:
      - {name: first-component, template: first-component}
  arguments:
    parameters: []
  serviceAccountName: pipeline-runner
